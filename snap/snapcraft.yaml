name: kesty-whatsapp
title: Kesty WhatsApp
version: '1.2.10'
summary: Unofficial WhatsApp client for Linux
description: |
  An unofficial WhatsApp client for Linux distributions made with love.
  It is concise, simple, easy and flexible to use. Built with Electron
  to provide a native desktop experience for WhatsApp Web.

  Features:
  - Native desktop experience for WhatsApp Web
  - Dark/Light theme support
  - System notifications and tray integration
  - Audio/video call support
  - Multi-architecture support
  - Secure and sandboxed via Snap packaging
grade: stable
confinement: strict
base: core22
architectures:
  - build-on: amd64
  - build-on: arm64
  - build-on: armhf
  - build-on: ppc64el
  - build-on: s390x

parts:
  kesty-whatsapp:
    plugin: npm
    source: .
    npm-include-node: true
    npm-node-version: "20.18.0"
    build-packages:
      - build-essential
      - wget
      - unzip
      - curl
      - ca-certificates
    stage-packages:
      - libnss3
      - libxss1
      - libgconf-2-4
      - libxrandr2
      - libasound2
      - libpangocairo-1.0-0
      - libatk1.0-0
      - libcairo-gobject2
      - libgtk-3-0
      - libgdk-pixbuf2.0-0
      - libxcomposite1
      - libxcursor1
      - libxdamage1
      - libxi6
      - libxtst6
      - libappindicator1
      - libdrm2
      - libxkbcommon0
      - libgbm1
      - libxfixes3
      - libatspi2.0-0
      - libsecret-1-0
    override-build: |
      echo "=== Building kesty-whatsapp application ==="

      # Set environment variables to prevent automatic Electron downloads
      export ELECTRON_SKIP_BINARY_DOWNLOAD=1
      export npm_config_cache=/tmp/npm-cache
      export npm_config_progress=false
      export npm_config_audit=false
      export npm_config_fund=false

      # Download Electron binary for the target architecture first
      case "$CRAFT_ARCH_BUILD_FOR" in
        amd64) ELECTRON_ARCH=x64 ;;
        arm64) ELECTRON_ARCH=arm64 ;;
        armhf) ELECTRON_ARCH=armv7l ;;
        ppc64el) ELECTRON_ARCH=ppc64 ;;
        s390x) ELECTRON_ARCH=s390x ;;
        *) ELECTRON_ARCH=x64 ;;
      esac

      ELECTRON_VERSION="37.1.0"
      ELECTRON_URL="https://github.com/electron/electron/releases/download/v${ELECTRON_VERSION}/electron-v${ELECTRON_VERSION}-linux-${ELECTRON_ARCH}.zip"

      echo "Downloading Electron v${ELECTRON_VERSION} for ${ELECTRON_ARCH}..."
      mkdir -p electron-dist
      cd electron-dist

      if wget --timeout=30 --tries=3 "$ELECTRON_URL" -O electron.zip; then
        echo "Download successful, extracting..."
        unzip -q electron.zip
        rm electron.zip
        chmod +x electron
        echo "✅ Electron binary ready"
      else
        echo "❌ Failed to download Electron, creating placeholder"
        echo '#!/bin/bash\necho "Electron not available"\nexit 1' > electron
        chmod +x electron
      fi

      cd ..

      # Run the default npm plugin behavior
      craftctl default

      # Replace any downloaded Electron with our pre-downloaded version
      if [ -d "node_modules/electron" ]; then
        echo "Replacing Electron binary..."
        rm -rf node_modules/electron/dist
        mkdir -p node_modules/electron/dist
        cp -r electron-dist/* node_modules/electron/dist/
      fi

      echo "✅ Build completed successfully"
    organize:
      'node_modules/electron/dist/electron': bin/electron
    stage:
      - bin/electron
      - node_modules/
      - main.js
      - package.json
      - app/
      - css/
      - images/
    prime:
      - bin/electron
      - node_modules/
      - main.js
      - package.json
      - app/
      - css/
      - images/

apps:
  kesty-whatsapp:
    command: bin/electron $SNAP/main.js
    desktop: snap/gui/kesty-whatsapp.desktop
    environment:
      DISABLE_WAYLAND: 1
    plugs:
      - desktop
      - desktop-legacy
      - home
      - x11
      - unity7
      - browser-support
      - network
      - gsettings
      - audio-playback
      - audio-record
      - camera
      - removable-media
      - screen-inhibit-control
      - wayland