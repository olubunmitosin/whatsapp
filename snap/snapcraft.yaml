name: kesty-whatsapp
title: Kesty WhatsApp
version: '1.2.10'
summary: Unofficial WhatsApp client for Linux
description: |
  An unofficial WhatsApp client for Linux distributions made with love.
  It is concise, simple, easy and flexible to use. Built with Electron
  to provide a native desktop experience for WhatsApp Web.

  Features:
  - Native desktop experience for WhatsApp Web
  - Dark/Light theme support
  - System notifications and tray integration
  - Audio/video call support
  - Multi-architecture support
  - Secure and sandboxed via Snap packaging
grade: stable
confinement: strict
base: core22
architectures:
  - build-on: amd64
  - build-on: arm64
  - build-on: armhf
  - build-on: ppc64el
  - build-on: s390x

parts:
  electron:
    plugin: nil
    build-packages:
      - wget
      - unzip
    override-build: |
      # Download pre-built Electron for the target architecture
      case "$CRAFT_ARCH_BUILD_FOR" in
        amd64) ELECTRON_ARCH=x64 ;;
        arm64) ELECTRON_ARCH=arm64 ;;
        armhf) ELECTRON_ARCH=armv7l ;;
        ppc64el) ELECTRON_ARCH=ppc64 ;;
        s390x) ELECTRON_ARCH=s390x ;;
        *) ELECTRON_ARCH=x64 ;;
      esac

      ELECTRON_VERSION="37.1.0"
      ELECTRON_URL="https://github.com/electron/electron/releases/download/v${ELECTRON_VERSION}/electron-v${ELECTRON_VERSION}-linux-${ELECTRON_ARCH}.zip"

      echo "=== Downloading Electron v${ELECTRON_VERSION} for ${ELECTRON_ARCH} ==="
      mkdir -p $CRAFT_PART_INSTALL/bin
      cd $CRAFT_PART_INSTALL/bin

      # Try multiple download methods for better reliability
      if wget --timeout=30 --tries=3 "$ELECTRON_URL" -O electron.zip; then
        echo "Download successful, extracting..."
        unzip -q electron.zip
        rm electron.zip
        chmod +x electron
        echo "✅ Electron binary ready for ${ELECTRON_ARCH}"
        ls -la electron
      elif curl -L --max-time 30 --retry 3 "$ELECTRON_URL" -o electron.zip; then
        echo "Download via curl successful, extracting..."
        unzip -q electron.zip
        rm electron.zip
        chmod +x electron
        echo "✅ Electron binary ready for ${ELECTRON_ARCH}"
        ls -la electron
      else
        echo "❌ Failed to download Electron binary for ${ELECTRON_ARCH}"
        echo "Creating placeholder that will show error message"
        echo '#!/bin/bash' > electron
        echo 'echo "❌ Electron binary not available for this architecture: '${ELECTRON_ARCH}'"' >> electron
        echo 'echo "Please report this issue to the maintainer"' >> electron
        echo 'exit 1' >> electron
        chmod +x electron
      fi
    prime:
      - bin/electron

  kesty-whatsapp:
    plugin: npm
    source: .
    npm-include-node: true
    npm-node-version: "18.19.0"
    after: [electron]
    build-packages:
      - build-essential
      - curl
      - ca-certificates
      - libnss3-dev
      - libatk-bridge2.0-dev
      - libdrm2
      - libxkbcommon0
      - libxss1
      - libasound2-dev
      - libxrandr2
      - libgconf-2-4
      - libxdamage1
      - libxcomposite1
      - libxcursor1
      - libxtst6
      - libappindicator1
      - libc6-dev
      - libx11-xcb1
      - libxcb-dri3-0
      - libgtk-3-0
      - libgbm1
    stage-packages:
      - libnss3
      - libxss1
      - libgconf-2-4
      - libxrandr2
      - libasound2
      - libpangocairo-1.0-0
      - libatk1.0-0
      - libcairo-gobject2
      - libgtk-3-0
      - libgdk-pixbuf2.0-0
      - libxcomposite1
      - libxcursor1
      - libxdamage1
      - libxi6
      - libxtst6
      - libappindicator1
      - libdrm2
      - libxkbcommon0
      - libgbm1
      - libxfixes3
      - libatspi2.0-0
      - libsecret-1-0
    override-build: |
      echo "=== Building kesty-whatsapp application ==="

      # Set environment variables to prevent automatic Electron downloads
      export ELECTRON_SKIP_BINARY_DOWNLOAD=1
      export npm_config_cache=/tmp/npm-cache
      export npm_config_target_arch=$CRAFT_ARCH_BUILD_FOR
      export npm_config_progress=false
      export npm_config_audit=false
      export npm_config_fund=false

      echo "Node.js version: $(node --version)"
      echo "NPM version: $(npm --version)"
      echo "Target architecture: $CRAFT_ARCH_BUILD_FOR"

      # Clean any existing node_modules
      rm -rf node_modules package-lock.json

      # Install dependencies without post-install scripts
      echo "Installing dependencies..."
      npm install --ignore-scripts --production --no-optional

      echo "✅ Dependencies installed successfully"
      echo "Installed packages:"
      ls -la node_modules/ | head -10

      # Run the default npm plugin behavior
      craftctl default
    stage:
      - node_modules/
      - main.js
      - package.json
      - app/
      - css/
      - images/
    prime:
      - node_modules/
      - main.js
      - package.json
      - app/
      - css/
      - images/

apps:
  kesty-whatsapp:
    command: bin/electron $SNAP/main.js
    desktop: snap/gui/kesty-whatsapp.desktop
    environment:
      DISABLE_WAYLAND: 1
    plugs:
      - desktop
      - desktop-legacy
      - home
      - x11
      - unity7
      - browser-support
      - network
      - gsettings
      - audio-playback
      - audio-record
      - camera
      - removable-media
      - screen-inhibit-control
      - wayland